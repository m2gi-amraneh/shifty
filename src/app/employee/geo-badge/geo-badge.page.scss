.gradient-background { /* Keep if you want the gradient */
  --background: linear-gradient(135deg, #6e7bca 0%, #4d80a3 100%); // Adjusted gradient
}

.container {
  max-width: 600px;
  margin: 0 auto;
  padding: 16px 0; // Adjust padding
}

.status-card {
  margin-bottom: 20px; // Use margin-bottom for spacing
  border-radius: 12px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  --background: var(--ion-color-light); // Default background

  ion-card-header {
      display: flex;
      align-items: center;
      padding-bottom: 8px; // Add padding below header
  }

  ion-card-title {
      font-size: 1.1em;
      font-weight: 600;
      margin-left: 8px;
  }

  .status-icon {
      font-size: 28px; // Slightly larger icon
  }

   ion-list {
      background: transparent; // Ensure list background is transparent
      padding-top: 0;
      padding-bottom: 0;
   }

   .transparent-list {
      background: transparent;
      --ion-item-background: transparent;
    }
   .transparent-item {
       --background: transparent;
       --padding-start: 0; // Remove default padding if icon is used
        --inner-padding-end: 0;
        ion-label h3 {
            font-weight: 500;
            font-size: 0.9em;
            color: var(--ion-color-medium-shade);
            margin-bottom: 2px;
        }
        ion-label p, ion-chip {
             font-size: 1em;
             color: var(--ion-color-dark-tint);
        }
         ion-icon {
          margin-right: 12px; // Space between icon and label
         }
    }
}

.location-card {
  // Specific styles if needed, e.g., border color based on status
  border-left: 5px solid;
  border-color: var(--ion-color-medium); // Default border

  &.verified {
    border-color: var(--ion-color-success);
     --background: #e8f5e9; // Light green background when verified
  }
  &.error {
    border-color: var(--ion-color-danger);
     --background: #ffcdd2; // Light red background on error
  }
  &.verifying {
     border-color: var(--ion-color-primary);
  }

   // Apply border color based on state using ngClass or direct binding if preferred
   ion-icon[color="success"] { --ion-color-base: var(--ion-color-success); }
   ion-icon[color="danger"] { --ion-color-base: var(--ion-color-danger); }
   ion-icon[color="medium"] { --ion-color-base: var(--ion-color-medium); }

   ion-button {
      margin-top: 10px;
   }
}


.closed-card {
  --background: #fff0f0; // Lighter red
  color: #b71c1c;
  border-left: 5px solid var(--ion-color-danger-shade);
}

.absence-card {
  --background: #fff9e6; // Lighter yellow/orange
  color: #f57f17;
  border-left: 5px solid var(--ion-color-warning-shade);
}

.active-shift-card {
  --background: #e8f5e9; // Lighter green
  color: #2e7d32;
  border-left: 5px solid var(--ion-color-success-shade);
}
.warning-card {
   --background: #fffbeb;
   color: #b26f00;
   border-left: 5px solid var(--ion-color-warning);
}

.shift-card {
  margin-bottom: 20px;
  border-radius: 12px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);

   ion-card-header {
      padding-bottom: 0;
   }

   ion-item.shift-item {
    --inner-padding-end: 8px;
    --min-height: 65px; // Ensure enough height for multi-line labels

    ion-label h2 {
        font-weight: 600;
        font-size: 1em;
        margin-bottom: 4px;
    }
    ion-label p {
        font-size: 0.9em;
        color: var(--ion-color-medium-shade);
        display: flex;
        align-items: center;
        gap: 5px; // Space between icon and text in paragraphs
    }

     &.extra-shift-item {
      border-top: 1px dashed var(--ion-color-medium-tint);
      margin-top: 8px;
      padding-top: 8px;
     }

     ion-radio {
         margin-left: 10px;
     }
  }

   .completed-text {
      color: var(--ion-color-success); // Use success color for completed
      font-weight: 500;
      font-size: 0.85em !important; // Make slightly smaller
   }
}


.action-buttons {
  margin-top: 25px;
  display: flex;
  flex-direction: column;
  gap: 15px; // More space between buttons

  ion-button {
      height: 50px;
      font-weight: 600;
      --border-radius: 25px; // Rounded buttons
      text-transform: uppercase; // Optional: make text uppercase
      font-size: 1em;
      --box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15); // Softer shadow
  }

  .badge-button {
      --background: var(--ion-color-primary);
      --background-activated: var(--ion-color-primary-shade); // Darker when pressed
      --color: var(--ion-color-primary-contrast);

       &[disabled] {
          --background: var(--ion-color-medium-tint);
          --color: var(--ion-color-dark-tint);
           --box-shadow: none;
       }
  }

  .break-button {
      --background: var(--ion-color-warning);
       --background-activated: var(--ion-color-warning-shade);
      --color: #fff; // Ensure contrast on warning background
       --box-shadow: 0 4px 15px rgba(255, 152, 0, 0.2);

        &[disabled] {
          --background: var(--ion-color-medium-tint);
          --color: var(--ion-color-dark-tint);
           --box-shadow: none;
       }
  }
}

// Spin animation for refresh icon
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.spin-icon {
  animation: spin 1.5s linear infinite;
}

// Ensure radio buttons align well when disabled
ion-radio[disabled] {
   opacity: 0.5;
}
