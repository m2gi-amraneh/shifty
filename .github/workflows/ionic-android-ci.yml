name: Ionic Android CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests
        run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadless
      - name: Run lint
        run: npm run lint

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build web
        run: npm run build --prod
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - name: Install Ionic
        run: npm install -g @ionic/cli
      - name: Build Android
        run: |
            ionic cap sync android
            cd android
            chmod +x gradlew
            ./gradlew assembleDebug
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/app-debug.apk
  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Install Firebase Tools
      run: npm install -g firebase-tools
    - name: Download APK
      uses: actions/download-artifact@v4
      with:
        name: app-debug
        path: ./apk
    - name: Verify APK exists
      run: ls -la ./apk
    - name: Deploy to Firebase
      run: firebase deploy --token ${{ secrets.FIREBASE_TOKEN }}
    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
          project_id: topic-app-4b583
          service_account_key: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}
          export_default_credentials: true

    - name: Upload APK to Firebase App Distribution
      run: |
             gcloud firebase app-distribution releases create \
             --app=${{ secrets.FIREBASE_APP_ID }} \
             --groups=tester \
             ./apk/app-debug.apk

 
