name: Ionic Android CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests
        run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadless
      - name: Run lint
        run: npm run lint

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build web
        run: npm run build --prod
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - name: Install Ionic
        run: npm install -g @ionic/cli
      - name: Build Android
        run: |
            ionic cap sync android
            cd android
            chmod +x gradlew
            ./gradlew assembleDebug
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/app-debug.apk

  deploy:
      needs: build
      if: github.ref == 'refs/heads/main'
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: Use Node.js
          uses: actions/setup-node@v4
          with:
              node-version: '18.x'
              cache: 'npm'
        - name: Install dependencies
          run: npm ci
        - name: Install Firebase Tools
          run: npm install -g firebase-tools
        - name: Download APK
          uses: actions/download-artifact@v2
          with:
              name: app-debug
              path: ./apk
        - name: Verify APK exists
          run: ls -la ./apk
        - name: Set GOOGLE_APPLICATION_CREDENTIALS
          run: echo "${{ secrets.FIREBASE_CREDENTIALS }}" > "${{ github.workspace }}/firebase-key.json"
          shell: bash
        - name: Deploy to Firebase
          run: firebase deploy --project ${{ secrets.FIREBASE_PROJECT_ID }}
          env:
              GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/firebase-key.json
        - name: Upload APK to Firebase App Distribution
          run: |
              echo "Distributing APK to testers..."
              firebase appdistribution:distribute ./apk/app-debug.apk \
              --app ${{ secrets.FIREBASE_APP_ID }} \
              --groups "testers" \
              --token ${{ secrets.FIREBASE_TOKEN }}
          env:
            GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/firebase-key.json
